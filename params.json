{"name":"Plugin Builder Tool","tagline":"Python command line tool for compiling and deploying QGIS plugins","body":"Plugin Build Tool - pb_tool\r\n============================\r\nhttp://g-sherman.github.io/plugin_build_tool\r\n\r\nPython command line tool for compiling and deploying QGIS plugins on all OS platforms.\r\n\r\n\r\n## Features\r\n\r\n*pb_tool* provides commands to aid in developing, testing, and deploying\r\na QGIS Python Plugin:\r\n\r\n* Compile resource and UI files\r\n* Deploy to your plugins directory for testing in QGIS\r\n* Create a zip file for upload to a repository\r\n* Clean both compiled and deployed files\r\n* Build and clean documentation\r\n* Build translation files\r\n* Works on Windows, OS X, and Linux\r\n\r\n##Installation\r\nYou can install the tool using pip:\r\n\r\n    pip install pb_tool\r\n\r\nTo upgrade to the latest version, use:\r\n\r\n    pip install --upgrade pb_tool\r\n\r\nYou can also install using easy_install:\r\n\r\n    easy_install pb_tool\r\n\r\nFor information on getting setup to develop on Windows, see:\r\n[The Almost Complete Guide to Getting Started with PyQGIS on Windows](http://spatialgalaxy.net/the-almost-complete-guide-to-getting-started-with-pyqgis-on-windows)\r\n\r\n##Usage\r\n\r\n*pb_tool* requires a configuration file in order to do anything. By default,\r\n*pb_tool* assumes a file name of pb_tool.cfg, although you can specify a\r\ndifferent one using the ``--config`` options in most commands.\r\n\r\nTo display the available commands, just enter `pb_tool` on the command line:\r\n\r\n\r\n    $ pb_tool\r\n    Usage: pb_tool [OPTIONS] COMMAND [ARGS]...\r\n\r\n      Simple Python tool to compile and deploy a QGIS plugin. For help on a\r\n      command use --help after the command: pb_tool deploy --help.\r\n\r\n      pb_tool requires a configuration file (default: pb_tool.cfg) that declares\r\n      the files and resources used in your plugin. Plugin Builder 2.6.0 creates\r\n      a config file when you generate a new plugin template.\r\n\r\n      See http://g-sherman.github.io/plugin_build_tool for for an example config\r\n      file. You can also use the create command to generate a best-guess config\r\n      file for an existing project, then tweak as needed.\r\n\r\n    Options:\r\n      --help  Show this message and exit.\r\n\r\n    Commands:\r\n      clean       Remove compiled resource and ui files\r\n      clean_docs  Remove the built HTML help files from the...\r\n      compile     Compile the resource and ui files\r\n      create      Create a config file based on source files in...\r\n      dclean      Remove the deployed plugin from the...\r\n      deploy      Deploy the plugin to QGIS plugin directory...\r\n      doc         Build HTML version of the help files using...\r\n      list        List the contents of the configuration file\r\n      translate   Build translations using lrelease.\r\n      validate    Check the pb_tool.cfg file for mandatory...\r\n      version     Return the version of pb_tool and exit\r\n      zip         Package the plugin into a zip file suitable...\r\n\r\n\r\n##Command Help\r\n\r\nHere is the help for a few of the commands, as reported using the --help option:\r\n\r\n###Compile\r\n\r\n    $ pb_tool compile --help\r\n    Usage: pb_tool compile [OPTIONS]\r\n\r\n      Compile the resource and ui files\r\n\r\n    Options:\r\n      --config TEXT  Name of the config file to use if other than pb_tool.cfg\r\n      --help         Show this message and exit.\r\n\r\n\r\n###Clean Deployment\r\n    $ pb_tool dclean --help\r\n    Usage: pb_tool dclean [OPTIONS]\r\n\r\n      Remove the deployed plugin from the .qgis2/python/plugins directory\r\n\r\n    Options:\r\n      --config TEXT  Name of the config file to use if other than pb_tool.cfg\r\n      --help         Show this message and exit.\r\n**Note**: Confirmation is required to remove the plugin\r\n\r\n###Clean Compiled Files\r\n    $ pb_tool clean --help\r\n    Usage: pb_tool clean [OPTIONS]\r\n\r\n      Remove compiled resource and ui files\r\n\r\n    Options:\r\n      --config TEXT  Name of the config file to use if other than pb_tool.cfg\r\n      --help         Show this message and exit.\r\n\r\n###Deploy\r\n    $ pb_tool deploy --help\r\n    Usage: pb_tool deploy [OPTIONS]\r\n\r\n      Deploy the plugin to QGIS plugin directory using parameters in pb_tool.cfg\r\n\r\n    Options:\r\n      --config TEXT  Name of the config file to use if other than pb_tool.cfg\r\n      -q, --quick    Do a quick install without compiling ui, resource, docs,\r\n                     and translation files\r\n      --help         Show this message and exit.\r\n**Note**: Confirmation is required before deploying as it removes the current version.\r\n\r\n###Zip\r\n    $ pb_tool zip --help\r\n    Usage: pb_tool zip [OPTIONS]\r\n\r\n      Package the plugin into a zip file suitable for uploading to the QGIS\r\n      plugin repository\r\n\r\n    Options:\r\n      --config TEXT  Name of the config file to use if other than pb_tool.cfg\r\n      --help         Show this message and exit.\r\n\r\n**Note**: To get a clean package for upload to a repository, the zip command\r\nsuggests doing a `dclean` and `deploy` first.\r\n\r\n###Creating a Config File for an Existing Project\r\nYou can create a config file for an existing plugin project by changing to the\r\ndirectory containing the plugin source and using `pb_tool create`:\r\n\r\n    $ pb_tool create --help\r\n    Usage: pb_tool create [OPTIONS]\r\n\r\n      Create a config file based on source files in the current directory\r\n\r\n    Options:\r\n      --name TEXT  Name of the config file to create if other than pb_tool.cfg\r\n      --help       Show this message and exit.\r\n\r\nOnce the config file is created you can try `deploy` to see if it\r\npicked up everything needed for your plugin---or open it in your\r\nfavorite text editor to tweak it as needed. The config file is annotated\r\nand should be self-explanatory.\r\n\r\n####Sample Config\r\n\r\n    # Sane defaults for your plugin generated by the Plugin Builder are\r\n    # already set below.\r\n    # \r\n    # As you add Python source files and UI files to your plugin, add\r\n    # them to the appropriate [files] section below.\r\n\r\n    [plugin]\r\n    # Name of the plugin. This is the name of the directory that will\r\n    # be created in .qgis2/python/plugins\r\n    name: TestPlugin\r\n\r\n    [files]\r\n    # Python  files that should be deployed with the plugin\r\n    python_files: __init__.py test_plugin.py test_plugin_dialog.py \r\n\r\n    # The main dialog file that is loaded (not compiled)\r\n    main_dialog: test_plugin_dialog_base.ui\r\n\r\n    # Other ui files for dialogs you create (these will be compiled)\r\n    compiled_ui_files: foo.ui\r\n\r\n    # Resource file(s) that will be compiled\r\n    resource_files: resources.qrc\r\n\r\n    # Other files required for the plugin\r\n    extras: icon.png metadata.txt\r\n\r\n    # Other directories to be deployed with the plugin.\r\n    # These must be subdirectories under the plugin directory\r\n    extra_dirs: i18n\r\n\r\n    # ISO code(s) for any locales (translations), separated by spaces.\r\n    # Corresponding .ts files must exist in the i18n directory\r\n    locales: af\r\n\r\n    [help]\r\n    # the built help directory that should be deployed with the plugin\r\n    dir: help/build/html\r\n    # the name of the directory to target in the deployed plugin \r\n    target: help\r\n\r\n\r\n\r\n##Deploying\r\n\r\n    Use ``pb_tool deploy`` to build your plugin and copy it\r\n    to qgis2/python/plugins`` in your HOME directory:\r\n\r\n\r\n    pb_tool deploy\r\n    Deploying will:\r\n                * Remove your currently deployed version\r\n                * Compile the ui and resource files\r\n                * Build the help docs\r\n                * Copy everything to your .qgis2/python/plugins directory\r\n\r\n    Proceed? [y/N]: y\r\n    Removing plugin from /Users/gsherman/.qgis2/python/plugins/TestPlugin\r\n    Deploying to /Users/gsherman/.qgis2/python/plugins/TestPlugin\r\n    Compiling to make sure install is clean\r\n    Skipping foo.ui (unchanged)\r\n    Compiled 0 UI files\r\n    Skipping resources.qrc (unchanged)\r\n    Compiled 0 resource files\r\n    Building the help documentation\r\n    sphinx-build -b html -d build/doctrees   source build/html\r\n    Running Sphinx v1.2b1\r\n    loading pickled environment... done\r\n    building [html]: targets for 0 source files that are out of date\r\n    updating environment: 0 added, 0 changed, 0 removed\r\n    looking for now-outdated files... none found\r\n    no targets are out of date.\r\n\r\n    Build finished. The HTML pages are in build/html.\r\n    Copying __init__.py\r\n    Copying test_plugin.py\r\n    Copying test_plugin_dialog.py\r\n    Copying test_plugin_dialog_base.ui\r\n    Copying foo.py\r\n    Copying resources_rc.py\r\n    Copying icon.png\r\n    Copying metadata.txt\r\n    Copying help/build/html to /Users/gsherman/.qgis2/python/plugins/TestPlugin/help\r\n\r\n\r\n\r\n##What's Missing\r\n\r\n* `pb_tool` currently doesn't support running tests for your plugin.\r\n* Probably other things we haven't thought of...\r\n\r\n##Why?\r\nWhy create a build tool when `make` using the Makefile generated by the\r\nPlugin Builder plugin generally works? Here are some reasons:\r\n\r\n* `pb_tool` lets you create configs for plugins that were not created using the\r\n  Plugin Builder plugin\r\n* The Makefile doesn't work completely on Windows in all cases\r\n* Writing a command line tool is fun..\r\n\r\n##Contributing\r\nIssues and pull requests can be submitted here:\r\n* https://github.com/g-sherman/plugin_build_tool\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}